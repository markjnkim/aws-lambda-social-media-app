AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  thoughts-app
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  getAllThoughtsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: src/handlers/get-all-thoughts.getAllThoughtsHandler
      Runtime: nodejs14.x
      Policies:
        # Give Create/Read/Update/Delete Permissions to the ThoughtsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref ThoughtsTable
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          TABLE_NAME: !Ref ThoughtsTable
      Events:
        ThoughtsApi:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /api/users
            Method: GET
  getByUserFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Handler: src/handlers/get-by-user.getByUserHandler
      Runtime: nodejs14.x
      Policies:
        # Give Create/Read/Update/Delete Permissions to the ThoughtsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref ThoughtsTable
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          TABLE_NAME: !Ref ThoughtsTable
      Events:
        ThoughtsApi:
          Type: Api 
          Properties:
            Path: /api/users/{username}
            Method: GET
  putThoughtFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Handler: src/handlers/put-thought.putThoughtHandler
      Runtime: nodejs14.x

      Policies:
        # Give Create/Read/Update/Delete Permissions to the ThoughtsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref ThoughtsTable
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          TABLE_NAME: !Ref ThoughtsTable
      Events:
        ThoughtsApi:
          Type: Api 
          Properties:
            Path: /api/users
            Method: POST
  getUrlFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Handler: src/handlers/get-url.getUrlHandler
      Runtime: nodejs14.x
      Environment:
        Variables:
          UPLOAD_BUCKET: !Ref S3UploadBucket  
      Policies:
        - S3WritePolicy:
            BucketName: !Ref S3UploadBucket
        ## This permission allows the Lambda function to request signed URLs
        ## for objects that will be publicly readable.
        - Statement:
          - Effect: Allow
            Resource: !Sub 'arn:aws:s3:::${S3UploadBucket}/'
            Action:
              - s3:putObjectAcl
      Events:
        ThoughtsApi:
          Type: Api 
          Properties:
            Path: /api/pre-url
            Method: GET
  ThoughtsTable: 
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - 
          AttributeName: "username"
          AttributeType: "S"
        - 
          AttributeName: "createdAt"
          AttributeType: "N"
      KeySchema: 
        - 
          AttributeName: "username"
          KeyType: "HASH"
        - 
          AttributeName: "createdAt"
          KeyType: "RANGE"
      ProvisionedThroughput: 
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
  ## S3 bucket
  S3UploadBucket:
    Type: AWS::S3::Bucket
    Properties:
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders:
            - "*"
          AllowedMethods:
            - GET
            - PUT
            - HEAD
          AllowedOrigins:
            - "*"
Outputs:
  ThoughtsApi:
    Description: "API Gateway endpoint URL for Prod stage for Thoughts application"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/api/users"
  ThoughtsTable:
    Description: "DynamoDB table"
    Value: !GetAtt ThoughtsTable.Arn
  S3UploadBucketName:
    Description: "S3 bucket for image uploads"
    Value: !Ref "S3UploadBucket"
  